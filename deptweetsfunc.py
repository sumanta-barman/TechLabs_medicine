# -*- coding: utf-8 -*-
"""DepTweetsFunc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PZRVEnetty7GRQMOcIHqTSCwkRRhQK-A
"""

#!pip install sentence-transformers
import numpy as np 
import pandas as pd
from sklearn.model_selection import train_test_split
from sentence_transformers import SentenceTransformer
from sklearn.ensemble import RandomForestClassifier
df = pd.read_csv("sentiment_tweets3.csv")
df.rename(columns={"message to examine":"message"}, inplace=True)
words = np.array(['not depressed', 'depressed'])

def bert(df):
  bert_model = SentenceTransformer('distilbert-base-nli-mean-tokens')
  embeddings = bert_model.encode(df.values[:,1], show_progress_bar=True)
  X = embeddings
  y = df.values[:,2]

  return X,y, bert_model

def split(X,y):
  X_train, X_test, y_train, y_test = train_test_split(X, y, 
                                          test_size=0.2, random_state=42)
  y_train = y_train.astype(int)
  y_test = y_test.astype(int)
  return X_train, X_test, y_train, y_test

X,y,bert_model = bert(df)

X_train, X_test, y_train, y_test = split(X,y)

fit = RandomForestClassifier().fit(X_train, y_train)

user = "If you choose to define me by my mistakes, Remember redemption doesn't fall down at your feet."
words[fit.predict([bert_model.encode(user)])].squeeze()